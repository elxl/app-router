parameters:
  - name: containerRegistry
    type: string
  - name: containerRepositories
    type: string
  - name: myenv
    type: string
  - name: dockerfile
    type: string
    default: 'Dockerfile'

steps:
- task: Bash@3
  displayName: Get version
  inputs:
    targetType: 'inline'
    script: |
      echo ${{ parameters.myenv }}
      echo $(myenv)
      echo "##vso[task.setvariable variable=myversion;isOutput=true]$(cat package.json|grep version|head -1|awk -F: '{ print $2 }'|sed 's/[", ]//g')"
  name: getParsedVars
- task: Docker@2
  displayName: Build Docker image
  inputs:
    containerRegistry: ${{ parameters.containerRegistry }}
    repository: ${{ parameters.containerRepositories }}
    command: 'build'
    Dockerfile: ${{ parameters.dockerfile }}
    tags: |
      ${{ parameters.myenv }}-latest
      ${{ parameters.myenv }}-$(getParsedVars.myversion)
    arguments: --build-arg ENV=${{ parameters.myenv }}
- task: Docker@2
  displayName: Push Docker image
  inputs:
    containerRegistry: ${{ parameters.containerRegistry }}
    repository: ${{ parameters.containerRepositories }}
    command: 'push'
    tags: |
      ${{ parameters.myenv }}-latest
      ${{ parameters.myenv }}-$(getParsedVars.myversion)